---
# ТК для всего приложения
- summary: |
    При переходе с главной страницы в корзину не происходит перезагрузки страницы
  requirement: |
    Поскольку приложение является SPA, при перемещении между его состовляющими не должна происходить перезагрузка страницы
  prerequisites: |
    Пользователь находится на главной странице магазина, в корзине есть один/несколько товаров, открыты "DevTools", вкладка "Network"
  test-data: |
    В корзине находятся товары
  steps:
    - Переходим в корзину
    - Отслеживаем состояние страницы через "DevTools"
  expected-result: |
    Страница не была перезагружена

- summary: |
    При перемещении между списками товаров не происходит перезагрузки страницы
  requirement: |
    Поскольку приложение является SPA, при перемещении между его состовляющими не должна происходить перезагрузка страницы
  prerequisites: |
    Пользователь находится на главной странице магазина, открыты "DevTools", вкладка "Network"
  test-data: |
    Пользователь находится на главной странице магазина, открыты "DevTools", вкладка "Network"
  steps:
    - нажимаем на кнопку "Следующая"
    - Отслеживаем состояние страницы через "DevTools"
  expected-result: |
    Страница не была перезагружена

- summary: |
    При переходе из корзины на главную страницу не происходит перезагрузки страницы
  requirement: |
    Поскольку приложение является SPA, при перемещении между его состовляющими не должна происходить перезагрузка страницы
  prerequisites: |
    Пользователь находится в разделе корзины, открыты "DevTools", вкладка "Network"
  test-data: |
    В корзине находятся товары
  steps:
    - Переходим на главную страницу
    - Отслеживаем состояние страницы через "DevTools"
  expected-result: |
    Страница не была перезагружена

- summary: |
    Описание и фотография товара соответствую друг другу
  requirement: |
    В карточке товара должно быть совпадение изображения и информации о товаре
  prerequisites:
    Пользователь находится на главной странице магазина
  test-data: |
    Товар с любой страницы с товарами
  steps:
    - Нажимаем на товар
    - В карточке товара читаем описание, название и сравниваем с фотографией
  expected-result: |
    Описание, фоторграфия и название товара соответствуют друг другу.

- summary: |
    Описание товаров не содержат опечаток
  requirement: |
    В описании товаров не должно быть опечаток
  prerequisites:
    Пользователь находится на главной странице магазина
  test-data: |
    Товар с любой страницы с товарами
  steps:
    - Нажимаем на товар
    - Читаем описание товара
  expected-result: |
    В описании товаров не должно быть опечаток, грамматических и орфографических ошибок

- summary: |
    Корректное отображение названия товара в каталоге
  requirement: |
    В каталоге должны быть указаны название, рейтинг, цена товара со скидкой и без нее
  prerequisites:
    Пользователь находится на главной странице магазина
  test-data: |
    Товар с любой страницы с товарами
  steps:
    - Нажимаем на товар
    - В карточке товара читаем описание, название и сравниваем с фотографией
  expected-result: |
    Описание, фоторграфия и название товара соответствуют друг другу.

- summary: |
    Корректное отображение информации о товаре на странице товара
  requirement: |
    В карточке товара должно быть совпадение изображения и информации о товаре
  prerequisites:
    Пользователь находится на главной странице магазина
  test-data: |
    Товар с любой страницы с товарами
  steps:
    - Нажимаем на товар
    - В карточке товара читаем описание, название и сравниваем с фотографией
  expected-result: |
    Описание, фоторграфия и название товара соответствуют друг другу.

# Фильтрация товаров - должна работать по всему магазину
- summary: |
    Успешный поиск товара через поле ввода "Поиск"
  requirement: |
    При вводе названия несуществующего товара пользователь получает сообщение "Ничего не найдено!"
  prerequisites:
    Пользователь находится на главной странице магазина
  test-data: |
    Название любого товара в наличии
  steps:
    - Вводим в поле "Поиск" название товара
  expected-result: |
    Товар отображается на странице
    
- summary: |
    Поиск несуществующего товара через поле ввода "Поиск"
  requirement: |
    При вводе названия несуществующего товара пользователь получает сообщение "Ничего не найдено!"
  prerequisites: |
    Пользователь находится на любой странице магазина
  test-data: |
    Название несуществующего товара: "12345678"
  steps:
    - Вводим в поле "Поиск" название товара "12345678"
  expected-result: |
    Пользователь получает сообщение "Ничего не найдено!"

- summary: |
    Проверка на XSS-уязвимость поля ввода "Поиск" на первой странице с товарами
  requirement: |
    При вводе скриптов типа <...> программа работает с ним как с обычным текстом
  prerequisites: |
    Пользователь находится на любой странице с товарами
  test-data: |
    Скрипт: <script>alert('Я отправил вам скрипт! Пришлите денег, пожалуйста :(')</script>
  steps:
    - Вводим в поле "Поиск" скрипт "<script>alert('Я отправил вам скрипт! Пришлите денег, пожалуйста :(')</script>"
    - Справа отображается сообщение "Ничего не найдено!"
  expected-result: |
    Приложение работает со скриптом как с обычным текстом

- summary: |
    Успешный выбор числового значения в поле выбора "Цена"
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
    Диапазон цены "100-500"
  steps:
    - В поле выбора цены выбираем нижнюю границу стоимости "100", верхнюю границу "500"
  expected-result: |
    Отображаются товары, попадающие в заданный диапазон.

# Проверка валидации поля "Цена от"
- summary: |
    Выбор числового значения "0" в поле выбора "Цена от" на странице с товарами
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
     Цена от "0", до "500"
  steps:
    - В поле выбора цены выбираем от "0", до "500"
  expected-result: |
    Отображаются товары, попадающие в заданный диапазон.

- summary: |
    Невозможность ввода числового значения в поле выбора "Цена от", превышающего максимальную стоимость товаров
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на на первой странице с товарами внизу
  test-data: |
     Цена от "1000000", до "3000"
  steps:
    - В поле выбора цены выбираем от "1000000", до "3000"
  expected-result: |
    Пользователь получает ошибку, поскольку минимальная цена не должна превышать максимальную

- summary: |
    Невозможность ввода отрицательного числового значения в поле выбора "Цена от"
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
     Цена от "-5", до "3000"
  steps:
    - В поле выбора цены выбираем от "-5", до "3000"
  expected-result: |
    Пользователь получает ошибку, поскольку цена не может быть отрицательной

- summary: |
    Невозможность ввода текстового значения в поле выбора "Цена от"
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
     Цена от "я цена", до "3000"
  steps:
    - В поле выбора цены вписываем в поле "Цена от" текст "я цена", до "6577.4999"
  expected-result: |
    Пользователь не может вписать текст в это поле, поскольку цена выражается числом

# Проверка валидации поля "Цена до"
- summary: |
    Выбор максимального числового значения в поле ввода "Цена до"
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
     Цена от "0", до "159031"
  steps:
    - В поле выбора цены выбираем от "0", до "159031"
  expected-result: |
    Отображаются товары, попадающие в заданный диапазон.

- summary: |
    Невозможность выбора числового значения в поле выбора "Цена до", превышающего стоимость товаров
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
     Цена от "0", до "666600"
  steps:
    - В поле выбора цены выбираем от "0", до "666600"
  expected-result: |
    Пользователь получает ошибку, поскольку цена не должна превышать максимальную стоимость товаров

- summary: |
    Невозможность ввода отрицательного числового значения в поле выбора "Цена до"
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
     Цена от "0", до "-5"
  steps:
    - В поле выбора цены выбираем от "0", до "-5"
  expected-result: |
    Пользователь получает ошибку, поскольку цена не может быть отрицательной

- summary: |
    Невозможность ввода текстового значения в поле выбора "Цена до"
  requirement: |
    При выборе определенного ценового диапазона отображаются товары с соответствующей стоимостью
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
     Цена от "0", до "я цена"
  steps:
    - В поле выбора цены вписываем "Цена от" - "0", "Цена до" текст "я цена"
  expected-result: |
    Пользователь не может вписать текст в это поле, поскольку цена выражается числом

- summary: |
    Ввод дробного числа в поле выбора "Цена до"
  requirement: |
    Подсказка в поле "Цена до" показывает возможность ввода дробного числа в формате х.хххх
  prerequisites: |
    Пользователь находится на на первой странице с товарами внизу
  test-data: |
     Цена от "0", до "650.5"
  steps:
    - В поле выбора цены вписываем "Цена от" "0", "Цена до" "650.5"
  expected-result: |
    Дробное число успешно ввелось, подходящие товары отобразились на странице

- summary: |
    Ввод дробного числа в поле выбора "Цена от"
  requirement: |
    Подсказка в поле "Цена до" показывает возможность ввода дробного числа в формате х.хххх
  prerequisites: |
    Пользователь находится на любой странице с товарами внизу
  test-data: |
     Цена от "17.28", до "657"
  steps:
    - В поле выбора цены вписываем "Цена от" "17.28", "Цена до" "657"
  expected-result: |
    Дробное число успешно ввелось, подходящие товары отобразились на странице

# Проверка выбора категорий товаров
- summary: |
    Успешная отмена фильтрации по категории товара
  requirement: |
    При одной из категорий товара пользователь должен иметь возможность в дальнейшем выбирать снова из всех товаров
  prerequisites: |
    Пользователь находится на любой странице магазина
  test-data: |
    Одна из категорий товара
  steps:
    - Открываем выпадающий список с категориями
    - Выбираем одну из категорий
    - Видим выбранные товары
    - Возвращаемся к списку категорий, чтобы отменить выбор одной
  expected-result: |
    На странице отображаются все товары, без деления на категории
    
- summary: |
    Успешный выбор товара категории через выпадающий список
  requirement: |
    При выборе одной из категорий, отображаются товары данной категории
  prerequisites: |
    Пользователь находится на любой странице с товарами
  test-data: |
     Товары любой категории на странице
  steps:
    - Открываем выпадающий список, нажав на кнопку "Категория"
    - Выбираем любую категорию
  expected-result: |
    На странице отображаются товары, относящиеся к этой категории

# Проверка чек-бокса "Производитель"
- summary: |
    Успешный выбор товаров одного производителя с помощью чек-бокса "Производитель"
  requirement: |
    При выборе одного производителя, отображаются товары этого производителя
  prerequisites: |
    Пользователь находится любой странице с товарами
  test-data: |
     Товары любого производителя
  steps:
    - Выбираем производителя
  expected-result: |
    Отображаются товары выбранного производителя

- summary: |
    Успешный выбор товаров нескольких производитей с помощью чек-бокса "Производитель"
  requirement: |
    При выборе нескольких производителей, отображаются товары всех выбранных производителей
  prerequisites: |
    Пользователь находится на любой странице с товарами
  test-data: |
     Товары любых трех производителей
  steps:
    - Отмечаем три производиетля с помощью чек-бокса
  expected-result: |
    Отображаются товары выбранных производителей

- summary: |
    Успешная отмена фильтрации товаров с помощью чек-бокса "Производитель"
  requirement: |
    При выборе нескольких производителей, отображаются товары всех выбранных производителей, когда не выбран ни один из производителей, отображаются все товары
  prerequisites: |
    Пользователь находится на любой странице с товарами
  test-data: |
     Товары любых трех производителей
  steps:
    - Отмечаем три производиетля с помощью чек-бокса
    - Видим товары выбранных производителей на странице
    - Отменяем выбор производителей с помощью чек-бокса
  expected-result: |
    Отображаются товары всех производителей

- summary: |
    Успешное отображении всех товаров в наличии с помощью чек-бокса "В наличии"
  requirement: |
    Чек-бокс "В наличии" активен по умолчанию, он влияет на остальной поиск товаров
  prerequisites: |
    Пользователь находится на любой странице с товарами
  test-data: |
     Товары различных производителей
  steps:
    - Выбираем нескольких производителей
    - Проверяем, что чек-бокс "В наличии" активен
  expected-result: |
    Отображаются товары выбранных производителей, находящиеся в наличии

- summary: |
    Успешное отображении всех товаров не в наличии с помощью дезактивации чек-бокса "В наличии"
  requirement: |
    Чек-бокс "В наличии" активен по умолчанию, если мы его снимаем, то поиск осуществляется по закончившимся товарам
  prerequisites: |
    Пользователь находится на любой странице с товарами
  test-data: |
     Товары любых производителей
  steps:
    - Выбираем нескольких производителей
    - Проверяем, что чек-бокс "В наличии" неактивен
  expected-result: |
    Отображаются товары выбранных производителей, которых нет в наличии

# Корзина
- summary: |
    Сохранение товара в корзине при закрытии страницы
  requirement: |
    При повторном открытии страницы магазина, пользователь должен найти ранее добавленные товары в корзине
  prerequisites: |
    Пользователь находится на странице магазина, в корзине есть один/несколько товаров
  test-data: |
    В корзине находятся товары
  steps:
    - Закрываем страницу магазина
    - Открываем страницы снова
    - Переходим в корзину
  expected-result: |
    Пользователь должен увидеть товары, добавленные ранее

- summary: |
    Успешное добавление одного товара в корзину
  requirement: |
    С помощью кнопки "в корзину" пользователь должен иметь возможность добавить желаемый товар в корзину
  prerequisites: |
    Пользователь находится на странице магазина, в корзине нет товаров
  test-data: |
    Пустая корзина, любой товар из магазина
  steps:
    - Выбираем один товар
    - Нажимаем на кнопку "В корзину"
    - У кнопки "Корзина" появляется цифра, обозначающая количество добавленного товара
    - Переходим в корзину, чтобы убедиться, что товар действительно там
  expected-result: |
    Видим товар в корзине

- summary: |
    Успешное добавление нескольких разных товаров в корзину
  requirement: |
    С помощью кнопки "в корзину" пользователь должен иметь возможность добавить желаемый товар в корзину
  prerequisites: |
    Пользователь находится на странице магазина, в корзине нет товаров
  test-data: |
    Пустая корзина, любой товар из магазина
  steps:
    - Выбираем один товар
    - Нажимаем на кнопку "В корзину"
    - Повторям первые два шага еще с двумя товарами
    - У кнопки "Корзина" появляется цифра, обозначающая количество добавленных товара
    - Переходим в корзину, чтобы убедиться, что товары действительно там
  expected-result: |
    Видим товары в корзине

- summary: |
    Успешное добавление нескольких одинаковых товаров в корзину
  requirement: |
    С помощью кнопки "в корзину" пользователь должен иметь возможность добавить желаемый товар в корзину
  prerequisites: |
    Пользователь находится на странице магазина, в корзине нет товаров
  test-data: |
    Пустая корзина, любой товар из магазина
  steps:
    - Выбираем один товар
    - Нажимаем на кнопку "В корзину" три раза
    - У кнопки "Корзина" появляется цифра равная количеству добавленных товаров
    - Переходим в корзину, чтобы убедиться, что товары действительно там
  expected-result: |
    Видим товары в корзине в правильном количестве
    
- summary: |
    Успешное оформление заказа
  requirement: |
    После добавления товаров в корзину, пользователь должен иметь возможность оформить заказ из корзины
  prerequisites: |
    Пользователь находится на главной странице магазина
  test-data: |
     В корзине пользователя находится товар
  steps:
    - Переходим в Корзину
    - Нажимаем на кнопку "Оформить заказ"
  expected-result: |
    Появляется сообщение об успешном оформлении заказа, данные заказа отправляются на сервер

- summary: |
    Успешное перенаправление на страницу оплаты заказа
  requirement: |
    После добавления товаров в корзину, пользователь должен иметь возможность оформить заказ из корзины, а затем оплатить его
  prerequisites: |
    Пользователь находится на главной странице магазина
  test-data: |
     В корзине пользователя находится товар
  steps:
    - Переходим в Корзину
    - Нажимаем на кнопку "Оформить заказ"
    - Видим сообщение об успешном оформлении заказа
    - Нажимаем на кнопку "Оплатить заказ"
  expected-result: |
    Пользователь перенаправлен на страницу оплаты заказа

- summary: |
    Успешное удаление товаров из корзины
  requirement: |
    После добавления товаров в корзину, пользователь должен иметь возможность удалить выбранные товары
  prerequisites: |
    Пользователь находится на главной странице магазина
  test-data: |
     В корзине пользователя находится товар
  steps:
    - Переходим в Корзину
    - Нажимаем на кнопку "Удалить" рядом с ненужным товаром
  expected-result: |
    Товар удален из корзины

- summary: |
    Закрытие сообщения "Заказ успешно оформлен" с помощью "Х"
  requirement: |
    После оформления заказа и получении сообщения об этом, пользователь должен иметь возможность закрыть окно либо с помощью "Х", либо с помощью кнопки "Закрыть"
  prerequisites: |
    Пользователь находится в разделе Корзина
  test-data: |
     В корзине пользователя находится товар
  steps:
    - Нажимаем на кнопку "Оформить заказ"
    - Видим сообщение "Заказ успешно оформлен"
    - Нажимаем на "Х"
  expected-result: |
    Окно сообщения успешно закрыто

- summary: |
    Закрытие сообщения "Заказ успешно оформлен" с помощью кнопки "Зыкрыть"
  requirement: |
    После оформления заказа и получении сообщения об этом, пользователь должен иметь возможность закрыть окно либо с помощью "Х", либо с помощью кнопки "Закрыть"
  prerequisites: |
    Пользователь находится в разделе Корзина
  test-data: |
     В корзине пользователя находится товар
  steps:
    - Нажимаем на кнопку "Оформить заказ"
    - Видим сообщение "Заказ успешно оформлен"
    - Нажимаем на кнопку "Закрыть"
  expected-result: |
    Окно сообщения успешно закрыто

# Проверка переключения языка интерфейса
- summary: |
    Успешное переключение языка интерфейса с английского на русский
  requirement: |
    При переключении языка с русского на английский, названия категорий, основные кнопки навигации и описание товаров переводятся на русский язык
  prerequisites: |
    Пользователь находится на главной странице магазина, включен английский язык
  test-data: |
     Включен английский язык
  steps:
    - Открываем выпадающий список "Language"
    - Выбираем язык интерфейса "Русский"
  expected-result: |
    Названия категорий, основные кнопки навигации и описание товаров переведены на русский язык

- summary: |
    Успешное переключение языка интерфейса с русского на английский
  requirement: |
    При переключении языка с английского на русский, названия категорий, основные кнопки навигации и описание товаров переводятся на английский язык
  prerequisites: |
    Пользователь находится на главной странице магазина, включен русский язык
  test-data: |
     Включен русский язык
  steps:
    - Открываем выпадающий список "Язык"
    - Выбираем язык интерфейса "English"
  expected-result: |
    Названия категорий, основные кнопки навигации и описание товаров переведены на английский язык

# Проверка кнопок
- summary: |
    Успешная работа кнопки "Следующая"
  requirement: |
    С помощью кнопки "Следующая" пользователь должен переключать список товаров, чтобы получить доступ к следующим товарам. Товары должны быть расположены одинаково после кадждого переключения 
  prerequisites: |
    Пользователь находится первой странице с товарами
  test-data: |
     Пользователь на первой странице магазина
  steps:
    - Нажимаем на кнопку "Следующая"
    - Видим товары второй страницы магазина
    - Обновляем страницу
    - Вновь находимся на первой странице с товарами
    - Нажимаем на кнопку "Следующая"
  expected-result: |
    Видим изначальный список товаров. Кнопка позволяет передвигаться вперед по списку с товарами.

- summary: |
    Успешная работа кнопки "Предыдущая"
  requirement: |
    С помощью кнопки "Предыдущая" пользователь должен переключать список товаров, чтобы получить доступ к предыдущей странице с товарами. Товары должны быть расположены одинаково после каждого переключения, порядок должен совпадать с основным порядком расположения товаров на странице
  prerequisites: |
    Пользователь находится второй странице с товарами
  test-data: |
     Пользователь на второй странице магазина
  steps:
    - Нажимаем на кнопку "Предыдущая"
    - Видим товары первой страницы магазина
    - Обновляем страницу
    - Вновь находимся на первой странице с товарами
    - Нажимаем на кнопку "Следующая"
    - Видим список товаров второй страницы
    - Нажимаем на кнопку "Предыдущая"
  expected-result: |
    Видим товары первой страницы в том же порядке, что они и были Товары отображаются в фиксированном порядке.

- summary: |
    Успешное перемещение в корзину с помощью кнопки "Корзина" со страницы магазина
  requirement: |
    С помощью кнопки "Корзина" пользователь должен быть перемещен в "Корзину" 
  prerequisites: |
    Пользователь находится любой странице с товарами
  test-data: |
     Пользователь на любой странице магазина
  steps:
    - Нажимаем на кнопку "Корзина"
  expected-result: |
    Кнопка позволяет переместиться с раздела с товарами в "Корзину".

- summary: |
    Успешное перемещение в корзину с помощью кнопки "Корзина" со страницы товара
  requirement: |
    С помощью кнопки "Корзина" пользователь должен быть перемещен в "Корзину" 
  prerequisites: |
    Пользователь находится странице с любым товаром
  test-data: |
     Любая страница товара
  steps:
    - Нажимаем на кнопку "Корзина"
  expected-result: |
    Кнопка позволяет переместиться с раздела с товарами в "Корзину".

- summary: |
    Успешное перемещение в раздел с товарами с помощью кнопки "Магазин"
  requirement: |
    С помощью кнопки "Магазин" пользователь должен быть перемещен в "Магазин" 
  prerequisites: |
    Пользователь находится в разделе "Корзина"
  test-data: |
     Пользователь находится в разделе "Корзина"
  steps:
    - Нажимаем на кнопку "Магазин"
  expected-result: |
    Кнопка позволяет переместиться из "Корзины" в раздел с товарами.

- summary: |
    Успешная работа кнопки "Очистить корзину"
  requirement: |
    С помощью кнопки "Очистить корзину" пользователь должен иметь возможность полностью очистить корзину
  prerequisites: |
    Пользователь находится в разделе "Корзина"
  test-data: |
     В разделе "Корзина" есть несколько товаров
  steps:
    - Нажимаем на кнопку "Очистить корзину"
  expected-result: |
    Корзина полностью очистилась

- summary: |
    Успешная работа кнопки "Продолжить покупки"
  requirement: |
    С помощью кнопки "Продолжить покупки" пользователь должен иметь возможность вернуться в раздел с товарами и продолжить покупки
  prerequisites: |
    Пользователь находится в разделе "Корзина"
  test-data: |
     В разделе "Корзина" есть несколько товаров
  steps:
    - Нажимаем на кнопку "Продолжить покупки"
    - Перемещаемся в раздел с товарами
  expected-result: |
    Пользователь перемещен в раздел товаров, товары ранее добавленные в корзину, сохраняются в корзине

- summary: |
    Успешная работа ссылки на категорию в карточке товара
  requirement: |
    С помощью ссылки на категорию в карточке товара пользователь должен иметь возможность просмотреть другие товары, находящиеся в данной категории
  prerequisites: |
    Пользователь находится в разделе с товарами
  test-data: |
     Пользователь находится в разделе с товарами
  steps:
    - Нажимаем на товар
    - Видим карточку товара
    - Нажимаем на хэштег категории в правом верхнем углу 
  expected-result: |
    При нажатии на хэштег пользователь может просмотреть другие товары, находящиеся в данной категории
